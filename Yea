-- Utility function to set tool names
local function setToolName(slot, newName)
    local player = game.Players.LocalPlayer
    local playerGui = player.PlayerGui
    local hotbar = playerGui:FindFirstChild("Hotbar")
    local backpack = hotbar and hotbar:FindFirstChild("Backpack")
    local hotbarFrame = backpack and backpack:FindFirstChild("Hotbar")
    local baseButton = hotbarFrame and hotbarFrame:FindFirstChild(slot)

    if baseButton then
        local ToolName = baseButton:FindFirstChild("ToolName")
        if ToolName then
            ToolName.Text = newName
        end
    end
end

-- Set tool names using a loop
local moveNames = {"Move Name 1", "Move Name 2", "Move Name 3", "Move Name 4"}  -- Moves 1-4 names
for i, name in ipairs(moveNames) do
    setToolName(tostring(i), name)
end

-- Set ult move names using a loop
local ultMoveNames = {"Ult Move Name 1", "Ult Move Name 2", "Ult Move Name 3", "Ult Move Name 4"} -- Ult moves
for i, name in ipairs(ultMoveNames) do
    setToolName(tostring(i + 4), name)  -- Assuming ult moves are set from slot 5 onwards
end

-- Function to handle GUI updates for the Ult Bar
local function updateHealthText(newText)
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")
    local screenGui = playerGui:FindFirstChild("ScreenGui")
    
    if screenGui then
        local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")
        if magicHealthFrame then
            local textLabel = magicHealthFrame:FindFirstChild("TextLabel")
            if textLabel then
                textLabel.Text = newText
            end
        end
    end
end

-- Update GUI text for the Ult Bar
local ultBarText = "Ultimate Bar Name" -- <--- Set your Ult Bar name here
updateHealthText(ultBarText)

-- Function to handle animations
local function onAnimationPlayed(animationTrack)
    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))
    
    -- List of animations and their replacements
    local animationReplacements = {
        [0] = "rbxassetid://16945573694",  -- Move 1
        [0] = "rbxassetid://16945550029",  -- Move 2
        [0] = "rbxassetid://16944345619",  -- Move 3
        [0] = "rbxassetid://17325254223",  -- Move 4
        [0] = "rbxassetid://0",  -- Ult Move 1
        [0] = "rbxassetid://0",  -- Ult Move 2
        [0] = "rbxassetid://0",  -- Ult Move 3
        [0] = "rbxassetid://0",  -- Ult Move 4
        [0] = "rbxassetid://0",  -- Dash
        [0] = "rbxassetid://0",  -- Uppercut
        [0] = "rbxassetid://0",  -- Downslam
        [0] = "rbxassetid://0"   -- Block
    }

    local replacementId = animationReplacements[animationId]
    if replacementId then
        -- Stop all animations
        for _, animTrack in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end
        
        -- Play replacement animation
        local anim = Instance.new("Animation")
        anim.AnimationId = replacementId
        local newAnimTrack = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(anim)
        newAnimTrack:Play()
        
        -- Adjust animation settings
        newAnimTrack:AdjustSpeed(1)
        newAnimTrack.TimePosition = 0
    end
end

-- Connect function to AnimationPlayed event
local humanoid = game.Players.LocalPlayer.Character:WaitForChild("Humanoid")
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

-- Function to handle BodyVelocity adjustments
local function onBodyVelocityAdded(bodyVelocity)
    if bodyVelocity:IsA("BodyVelocity") then
        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)
    end
end

-- Monitor existing and new BodyVelocity instances
local character = game.Players.LocalPlayer.Character
for _, descendant in pairs(character:GetDescendants()) do
    onBodyVelocityAdded(descendant)
end

character.DescendantAdded:Connect(onBodyVelocityAdded)

-- Handle new character creation
game.Players.LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    for _, descendant in pairs(character:GetDescendants()) do
        onBodyVelocityAdded(descendant)
    end
end)
